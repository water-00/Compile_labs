INT	int	3	0	
ID	f	3	4	<0, 1>
LPAREN	(	3	5	
RPAREN	)	3	6	
LBRACE	{	3	8	
INT	int	4	1	
ID	a	4	5	<1, 1>
SEMICOLON	;	4	6	
ID	a	5	1	<1, 1>
ASSIGN	=	5	3	
DECIMAL	0	5	5	
SEMICOLON	;	5	6	
WHILE	while	6	1	
LPAREN	(	6	7	
ID	a	6	8	<1, 1>
LESS	<	6	10	
DECIMAL	10	6	12	
RPAREN	)	6	14	
LBRACE	{	6	16	
ID	a	7	2	<1, 1>
ASSIGN	=	7	4	
ID	a	7	6	<2, 1>
MUL	*	7	8	
HEXADECIMAL	17	7	10	
SEMICOLON	;	7	14	
ID	a	8	2	<2, 1>
ASSIGN	=	8	4	
ID	a	8	6	<2, 1>
MUL	*	8	8	
OCTAL	9	8	10	
SEMICOLON	;	8	13	
ID	a	9	2	<2, 1>
ASSIGN	=	9	4	
ID	a	9	6	<2, 1>
MUL	*	9	8	
DECIMAL	11	9	10	
SEMICOLON	;	9	12	
RBRACE	}	10	1	
RETURN	return	11	1	
ID	a	11	8	<2, 1>
SEMICOLON	;	11	9	
RBRACE	}	12	0	
INT	int	14	0	
MAIN	main	14	4	
LPAREN	(	14	8	
RPAREN	)	14	9	
LBRACE	{	14	11	
INT	int	15	1	
ID	_testid	15	5	<3, 1>
SEMICOLON	;	15	12	
ID	_testid	16	1	<3, 1>
ASSIGN	=	16	9	
DECIMAL	0	16	11	
SEMICOLON	;	16	12	
IF	if	17	1	
LPAREN	(	17	3	
ID	_testid	17	4	<3, 1>
EQUAL	==	17	12	
DECIMAL	0	17	15	
RPAREN	)	17	16	
LBRACE	{	17	17	
INT	int	18	2	
ID	_testid	18	6	<3, 1>
SEMICOLON	;	18	13	
INT	int	19	2	
ID	_testid2	19	6	<4, 2>
SEMICOLON	;	19	14	
ID	_testid1	20	2	<4, 3>
ASSIGN	=	20	11	
ID	_testid1	20	13	<4, 3>
ADD	+	20	21	
DECIMAL	1	20	22	
SEMICOLON	;	20	23	
RBRACE	}	21	1	
LBRACE	{	25	1	
INT	int	26	2	
ID	a	26	6	<5, 1>
SEMICOLON	;	26	7	
RBRACE	}	27	1	
LBRACE	{	28	1	
INT	int	29	2	
ID	a	29	6	<6, 1>
SEMICOLON	;	29	7	
RBRACE	}	30	1	
INT	int	31	1	
ID	b	31	5	<6, 4>
SEMICOLON	;	31	6	
RETURN	return	32	1	
DECIMAL	0	32	8	
SEMICOLON	;	32	9	
RBRACE	}	33	0	
